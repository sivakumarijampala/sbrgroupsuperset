"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["src_explore_components_controls_AnnotationLayerControl_AnnotationLayer_jsx"],{

/***/ "./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx":
/*!************************************************************************************!*\
  !*** ./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx ***!
  \************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var react_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-color */ \"./node_modules/react-color/lib/index.js\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/chart/registries/ChartMetadataRegistrySingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/math-expression/index.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/validator/validateNonEmpty.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/query/getColumnLabel.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/color/CategoricalSchemeRegistrySingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-element-99289b21.browser.esm.js\");\n/* harmony import */ var src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/explore/components/controls/SelectControl */ \"./src/explore/components/controls/SelectControl.jsx\");\n/* harmony import */ var src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/explore/components/controls/TextControl */ \"./src/explore/components/controls/TextControl/index.tsx\");\n/* harmony import */ var src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/explore/components/controls/CheckboxControl */ \"./src/explore/components/controls/CheckboxControl.jsx\");\n/* harmony import */ var src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/PopoverSection */ \"./src/components/PopoverSection/index.tsx\");\n/* harmony import */ var src_explore_components_ControlHeader__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/explore/components/ControlHeader */ \"./src/explore/components/ControlHeader.tsx\");\n/* harmony import */ var src_components_EmptyState__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components/EmptyState */ \"./src/components/EmptyState/index.tsx\");\n/* harmony import */ var src_explore_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/explore/constants */ \"./src/explore/constants.ts\");\n/* harmony import */ var _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AnnotationTypes */ \"./src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst AUTOMATIC_COLOR = '';\n\nconst propTypes = {\n  name: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  annotationType: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  sourceType: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  color: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  opacity: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  style: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  width: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().number),\n  showMarkers: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),\n  hideLine: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),\n  value: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_12___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().number)]),\n  overrides: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),\n  show: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),\n  showLabel: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),\n  titleColumn: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  descriptionColumns: prop_types__WEBPACK_IMPORTED_MODULE_12___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)),\n  timeColumn: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  intervalEndColumn: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  vizType: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n\n  error: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  colorScheme: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n\n  addAnnotationLayer: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),\n  removeAnnotationLayer: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),\n  close: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func)\n};\n\nconst defaultProps = {\n  name: '',\n  annotationType: _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.DEFAULT_ANNOTATION_TYPE,\n  sourceType: '',\n  color: AUTOMATIC_COLOR,\n  opacity: '',\n  style: 'solid',\n  width: 1,\n  showMarkers: false,\n  hideLine: false,\n  overrides: {},\n  colorScheme: 'd3Category10',\n  show: true,\n  showLabel: false,\n  titleColumn: '',\n  descriptionColumns: [],\n  timeColumn: '',\n  intervalEndColumn: '',\n\n  addAnnotationLayer: () => {},\n  removeAnnotationLayer: () => {},\n  close: () => {}\n};\n\nconst NotFoundContentWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.styled.div`\n  && > div:first-child {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\nconst NotFoundContent = () =>\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(NotFoundContentWrapper, null,\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_EmptyState__WEBPACK_IMPORTED_MODULE_9__.EmptyStateSmall, {\n  title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('No annotation layers'),\n  description:\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", null,\n  (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Add an annotation layer'), ' ',\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"a\", {\n    href: \"/annotationlayer/list\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\" },\n\n  (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('here')\n  ), \".\"\n\n  ),\n\n  image: \"empty.svg\" }\n)\n);var _ref5 =  false ? 0 : { name: \"1jn9azd-AnnotationLayer\", styles: \"overflow:hidden;text-overflow:ellipsis;white-space:nowrap;label:AnnotationLayer;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nclass AnnotationLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      annotationType,\n      sourceType,\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      value,\n      overrides,\n      show,\n      showLabel,\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      vizType\n    } = props;\n\n    // Only allow override whole time_range\n    if ('since' in overrides || 'until' in overrides) {\n      overrides.time_range = null;\n      delete overrides.since;\n      delete overrides.until;\n    }\n\n    // Check if annotationType is supported by this chart\n    const metadata = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"])().get(vizType);\n    const supportedAnnotationTypes = (metadata == null ? void 0 : metadata.supportedAnnotationTypes) || [];\n    const validAnnotationType = supportedAnnotationTypes.includes(\n      annotationType\n    ) ?\n    annotationType :\n    supportedAnnotationTypes[0];\n\n    this.state = {\n      // base\n      name,\n      annotationType: validAnnotationType,\n      sourceType,\n      value,\n      overrides,\n      show,\n      showLabel,\n      // slice\n      titleColumn,\n      descriptionColumns,\n      timeColumn,\n      intervalEndColumn,\n      // display\n      color: color || AUTOMATIC_COLOR,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      // refData\n      isNew: !name,\n      isLoadingOptions: true,\n      valueOptions: []\n    };\n    this.submitAnnotation = this.submitAnnotation.bind(this);\n    this.deleteAnnotation = this.deleteAnnotation.bind(this);\n    this.applyAnnotation = this.applyAnnotation.bind(this);\n    this.fetchOptions = this.fetchOptions.bind(this);\n    this.handleAnnotationType = this.handleAnnotationType.bind(this);\n    this.handleAnnotationSourceType =\n    this.handleAnnotationSourceType.bind(this);\n    this.handleValue = this.handleValue.bind(this);\n    this.isValidForm = this.isValidForm.bind(this);\n  }\n\n  componentDidMount() {\n    const { annotationType, sourceType, isLoadingOptions } = this.state;\n    this.fetchOptions(annotationType, sourceType, isLoadingOptions);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sourceType !== this.state.sourceType) {\n      this.fetchOptions(this.state.annotationType, this.state.sourceType, true);\n    }\n  }\n\n  getSupportedSourceTypes(annotationType) {var _ANNOTATION_TYPES_MET;\n    // Get vis types that can be source.\n    const sources = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"])().\n    entries().\n    filter((_ref) => {let { value: chartMetadata } = _ref;return (\n        chartMetadata.canBeAnnotationType(annotationType));}\n    ).\n    map((_ref2) => {let { key, value: chartMetadata } = _ref2;return {\n        value: key,\n        label: chartMetadata.name\n      };});\n    // Prepend native source if applicable\n    if ((_ANNOTATION_TYPES_MET = _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES_METADATA[annotationType]) != null && _ANNOTATION_TYPES_MET.supportNativeSource) {\n      sources.unshift(_AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_SOURCE_TYPES_METADATA.NATIVE);\n    }\n    return sources;\n  }\n\n  isValidFormulaAnnotation(expression, annotationType) {\n    if (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.FORMULA) {\n      return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_17__.isValidExpression)(expression);\n    }\n    return true;\n  }\n\n  isValidForm() {\n    const {\n      name,\n      annotationType,\n      sourceType,\n      value,\n      timeColumn,\n      intervalEndColumn\n    } = this.state;\n    const errors = [\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(name),\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(annotationType),\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(value)];\n\n    if (sourceType !== _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n      if (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.EVENT) {\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(timeColumn));\n      }\n      if (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.INTERVAL) {\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(timeColumn));\n        errors.push((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(intervalEndColumn));\n      }\n    }\n    errors.push(!this.isValidFormulaAnnotation(value, annotationType));\n    return !errors.filter((x) => x).length;\n  }\n\n  handleAnnotationType(annotationType) {\n    this.setState({\n      annotationType,\n      sourceType: null,\n      value: null\n    });\n  }\n\n  handleAnnotationSourceType(sourceType) {\n    const { sourceType: prevSourceType } = this.state;\n\n    if (prevSourceType !== sourceType) {\n      this.setState({ sourceType, value: null, isLoadingOptions: true });\n    }\n  }\n\n  handleValue(value) {\n    this.setState({\n      value,\n      descriptionColumns: [],\n      intervalEndColumn: null,\n      timeColumn: null,\n      titleColumn: null,\n      overrides: { time_range: null }\n    });\n  }\n\n  fetchOptions(annotationType, sourceType, isLoadingOptions) {\n    if (isLoadingOptions) {\n      if (sourceType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n        const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({\n          page: 0,\n          page_size: src_explore_constants__WEBPACK_IMPORTED_MODULE_10__.FILTER_OPTIONS_LIMIT\n        });\n        _superset_ui_core__WEBPACK_IMPORTED_MODULE_19__[\"default\"].get({\n          endpoint: `/api/v1/annotation_layer/?q=${queryParams}`\n        }).then((_ref3) => {let { json } = _ref3;\n          const layers = json ?\n          json.result.map((layer) => ({\n            value: layer.id,\n            label: layer.name\n          })) :\n          [];\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: layers\n          });\n        });\n      } else if ((0,_AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.requiresQuery)(sourceType)) {\n        const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({\n          filters: [\n          {\n            col: 'id',\n            opr: 'chart_owned_created_favored_by_me',\n            value: true\n          }],\n\n          order_column: 'slice_name',\n          order_direction: 'asc',\n          page: 0,\n          page_size: src_explore_constants__WEBPACK_IMPORTED_MODULE_10__.FILTER_OPTIONS_LIMIT\n        });\n        _superset_ui_core__WEBPACK_IMPORTED_MODULE_19__[\"default\"].get({\n          endpoint: `/api/v1/chart/?q=${queryParams}`\n        }).then((_ref4) => {let { json } = _ref4;\n          const registry = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"])();\n          this.setState({\n            isLoadingOptions: false,\n            valueOptions: json.result.\n            filter((x) => {\n              const metadata = registry.get(x.viz_type);\n              return metadata && metadata.canBeAnnotationType(annotationType);\n            }).\n            map((x) => {var _x$form_data$groupby;return {\n                value: x.id,\n                label: x.slice_name,\n                slice: {\n                  ...x,\n                  data: {\n                    ...x.form_data,\n                    groupby: (_x$form_data$groupby = x.form_data.groupby) == null ? void 0 : _x$form_data$groupby.map((column) =>\n                    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(column)\n                    )\n                  }\n                }\n              };})\n          });\n        });\n      } else {\n        this.setState({\n          isLoadingOptions: false,\n          valueOptions: []\n        });\n      }\n    }\n  }\n\n  deleteAnnotation() {\n    this.props.removeAnnotationLayer();\n    this.props.close();\n  }\n\n  applyAnnotation() {\n    if (this.isValidForm()) {\n      const annotationFields = [\n      'name',\n      'annotationType',\n      'sourceType',\n      'color',\n      'opacity',\n      'style',\n      'width',\n      'showMarkers',\n      'hideLine',\n      'value',\n      'overrides',\n      'show',\n      'showLabel',\n      'titleColumn',\n      'descriptionColumns',\n      'timeColumn',\n      'intervalEndColumn'];\n\n      const newAnnotation = {};\n      annotationFields.forEach((field) => {\n        if (this.state[field] !== null) {\n          newAnnotation[field] = this.state[field];\n        }\n      });\n\n      if (newAnnotation.color === AUTOMATIC_COLOR) {\n        newAnnotation.color = null;\n      }\n\n      this.props.addAnnotationLayer(newAnnotation);\n      this.setState({ isNew: false });\n    }\n  }\n\n  submitAnnotation() {\n    this.applyAnnotation();\n    this.props.close();\n  }\n\n  renderOption(option) {\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", {\n        css: _ref5,\n\n\n\n\n        title: option.label },\n\n      option.label\n      ));\n\n  }\n\n  renderValueConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      isLoadingOptions\n    } = this.state;\n    let label = '';\n    let description = '';\n    if ((0,_AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.requiresQuery)(sourceType)) {\n      if (sourceType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_SOURCE_TYPES.NATIVE) {\n        label = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer');\n        description = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Select the Annotation Layer you would like to use.');\n      } else {\n        label = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Chart');\n        description = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n          `Use another existing chart as a source for annotations and overlays.\n          Your chart must be one of these visualization types: [%s]`,\n          this.getSupportedSourceTypes(annotationType).\n          map((x) => x.label).\n          join(', ')\n        );\n      }\n    } else if (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.FORMULA) {\n      label = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Formula');\n      description = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`Expects a formula with depending time parameter 'x'\n        in milliseconds since epoch. mathjs is used to evaluate the formulas.\n        Example: '2x+5'`);\n    }\n    if ((0,_AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.requiresQuery)(sourceType)) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer value'),\n          name: \"annotation-layer-value\",\n          showHeader: true,\n          hovered: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          options: valueOptions,\n          isLoading: isLoadingOptions,\n          value: value,\n          onChange: this.handleValue,\n          validationErrors: !value ? ['Mandatory'] : [],\n          optionRenderer: this.renderOption,\n          notFoundContent: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(NotFoundContent, null) }\n        ));\n\n    }\n    if (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.FORMULA) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          name: \"annotation-layer-value\",\n          hovered: true,\n          showHeader: true,\n          description: description,\n          label: label,\n          placeholder: \"\",\n          value: value,\n          onChange: this.handleValue,\n          validationErrors:\n          !this.isValidFormulaAnnotation(value, annotationType) ?\n          [(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Bad formula.')] :\n          [] }\n\n        ));\n\n    }\n    return '';\n  }\n\n  renderSliceConfiguration() {\n    const {\n      annotationType,\n      sourceType,\n      value,\n      valueOptions,\n      overrides,\n      titleColumn,\n      timeColumn,\n      intervalEndColumn,\n      descriptionColumns\n    } = this.state;\n    const { slice } = valueOptions.find((x) => x.value === value) || {};\n    if (sourceType !== _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_SOURCE_TYPES.NATIVE && slice) {\n      const columns = (slice.data.groupby || []).\n      concat(slice.data.all_columns || []).\n      map((x) => ({ value: x, label: x }));\n      const timeColumnOptions = slice.data.include_time ?\n      [{ value: '__timestamp', label: '__timestamp' }].concat(columns) :\n      columns;\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginRight: '2rem' } },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n          isSelected: true,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation Slice Configuration'),\n          info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`This section allows you to configure how to use the slice\n              to generate annotations.`) },\n\n        (annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.EVENT ||\n        annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.INTERVAL) &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer time column'),\n          hovered: true,\n          name: \"annotation-layer-time-column\",\n          label:\n          annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.INTERVAL ?\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Interval start column') :\n          (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Event time column'),\n\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n            'This column must contain date/time information.'\n          ),\n          validationErrors: !timeColumn ? ['Mandatory'] : [],\n          clearable: false,\n          options: timeColumnOptions,\n          value: timeColumn,\n          onChange: (v) => this.setState({ timeColumn: v }) }\n        ),\n\n        annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.INTERVAL &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer interval end'),\n          hovered: true,\n          name: \"annotation-layer-intervalEnd\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Interval End column'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n            'This column must contain date/time information.'\n          ),\n          validationErrors: !intervalEndColumn ? ['Mandatory'] : [],\n          options: columns,\n          value: intervalEndColumn,\n          onChange: (value) => this.setState({ intervalEndColumn: value }) }\n        ),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer title column'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Title Column'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Pick a title for you annotation.'),\n          options: [{ value: '', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('None') }].concat(columns),\n          value: titleColumn,\n          onChange: (value) => this.setState({ titleColumn: value }) }\n        ),\n        annotationType !== _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.TIME_SERIES &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer description columns'),\n          hovered: true,\n          name: \"annotation-layer-title\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Description Columns'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(\n            \"Pick one or more columns that should be shown in the annotation. If you don't select a column all of them will be shown.\"\n          ),\n          multi: true,\n          options: columns,\n          value: descriptionColumns,\n          onChange: (value) => this.setState({ descriptionColumns: value }) }\n        ),\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginTop: '1rem' } },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n          hovered: true,\n          name: \"annotation-override-time_range\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Override time range'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`This controls whether the \"time_range\" field from the current\n                  view should be passed down to the chart containing the annotation data.`),\n          value: 'time_range' in overrides,\n          onChange: (v) => {\n            delete overrides.time_range;\n            if (v) {\n              this.setState({\n                overrides: { ...overrides, time_range: null }\n              });\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          } }\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n          hovered: true,\n          name: \"annotation-override-timegrain\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Override time grain'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`This controls whether the time grain field from the current\n                  view should be passed down to the chart containing the annotation data.`),\n          value: 'time_grain_sqla' in overrides,\n          onChange: (v) => {\n            delete overrides.time_grain_sqla;\n            delete overrides.granularity;\n            if (v) {\n              this.setState({\n                overrides: {\n                  ...overrides,\n                  time_grain_sqla: null,\n                  granularity: null\n                }\n              });\n            } else {\n              this.setState({ overrides: { ...overrides } });\n            }\n          } }\n        ),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n          hovered: true,\n          name: \"annotation-layer-timeshift\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Time Shift'),\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)(`Time delta in natural language\n                  (example:  24 hours, 7 days, 56 weeks, 365 days)`),\n          placeholder: \"\",\n          value: overrides.time_shift,\n          onChange: (v) =>\n          this.setState({ overrides: { ...overrides, time_shift: v } }) }\n\n        )\n        )\n        )\n        ));\n\n    }\n    return '';\n  }\n\n  renderDisplayConfiguration() {\n    const {\n      color,\n      opacity,\n      style,\n      width,\n      showMarkers,\n      hideLine,\n      annotationType\n    } = this.state;\n    const colorScheme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_21__[\"default\"])().\n    get(this.props.colorScheme).\n    colors.concat();\n    if (\n    color &&\n    color !== AUTOMATIC_COLOR &&\n    !colorScheme.find((x) => x.toLowerCase() === color.toLowerCase()))\n    {\n      colorScheme.push(color);\n    }\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        isSelected: true,\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Display configuration'),\n        info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Configure your how you overlay is displayed here.') },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer stroke'),\n        name: \"annotation-layer-stroke\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Style')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: 'solid', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Solid') },\n        { value: 'dashed', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Dashed') },\n        { value: 'longDashed', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Long dashed') },\n        { value: 'dotted', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Dotted') }],\n\n        value: style,\n        clearable: false,\n        onChange: (v) => this.setState({ style: v }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer opacity'),\n        name: \"annotation-layer-opacity\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Opacity')\n        // see '../../../visualizations/nvd3_vis.css'\n        , options: [\n        { value: '', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Solid') },\n        { value: 'opacityLow', label: '0.2' },\n        { value: 'opacityMedium', label: '0.5' },\n        { value: 'opacityHigh', label: '0.8' }],\n\n        value: opacity,\n        onChange: (value) => this.setState({ opacity: value }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_ControlHeader__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Color') }),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', flexDirection: 'column' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(react_color__WEBPACK_IMPORTED_MODULE_2__.CompactPicker, {\n        color: color,\n        colors: colorScheme,\n        onChangeComplete: (v) => this.setState({ color: v.hex }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        style: { marginTop: '0.5rem', marginBottom: '0.5rem' },\n        buttonStyle: color === AUTOMATIC_COLOR ? 'success' : 'default',\n        buttonSize: \"xsmall\",\n        onClick: () => this.setState({ color: AUTOMATIC_COLOR }) },\n\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Automatic Color')\n      )\n      )\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        name: \"annotation-layer-stroke-width\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Line width'),\n        isInt: true,\n        value: width,\n        onChange: (v) => this.setState({ width: v }) }\n      ),\n      annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.TIME_SERIES &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        hovered: true,\n        name: \"annotation-layer-show-markers\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Show Markers'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Shows or hides markers for the time series'),\n        value: showMarkers,\n        onChange: (v) => this.setState({ showMarkers: v }) }\n      ),\n\n      annotationType === _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES.TIME_SERIES &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        hovered: true,\n        name: \"annotation-layer-hide-line\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Hide Line'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Hides the Line for the time series'),\n        value: hideLine,\n        onChange: (v) => this.setState({ hideLine: v }) }\n      )\n\n      ));\n\n  }\n\n  render() {\n    const { isNew, name, annotationType, sourceType, show, showLabel } =\n    this.state;\n    const isValid = this.isValidForm();\n    const metadata = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_16__[\"default\"])().get(this.props.vizType);\n    const supportedAnnotationTypes = metadata ?\n    metadata.supportedAnnotationTypes.map(\n      (type) => _AnnotationTypes__WEBPACK_IMPORTED_MODULE_11__.ANNOTATION_TYPES_METADATA[type]\n    ) :\n    [];\n    const supportedSourceTypes = this.getSupportedSourceTypes(annotationType);\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n      this.props.error &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", { style: { color: this.props.theme.colors.error.base } }, \"ERROR: \",\n      this.props.error\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', flexDirection: 'row' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { marginRight: '2rem' } },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_PopoverSection__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        isSelected: true,\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Layer configuration'),\n        info: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Configure the basics of your Annotation Layer.') },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        name: \"annotation-layer-name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Name'),\n        placeholder: \"\",\n        value: name,\n        onChange: (v) => this.setState({ name: v }),\n        validationErrors: !name ? [(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Mandatory')] : [] }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        name: \"annotation-layer-hide\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Hide layer'),\n        value: !show,\n        onChange: (v) => this.setState({ show: !v }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        name: \"annotation-label-show\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Show label'),\n        value: showLabel,\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Whether to always show the annotation label'),\n        onChange: (v) => this.setState({ showLabel: v }) }\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer type'),\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Choose the annotation layer type'),\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation layer type'),\n        name: \"annotation-layer-type\",\n        clearable: false,\n        options: supportedAnnotationTypes,\n        value: annotationType,\n        onChange: this.handleAnnotationType }\n      ),\n      supportedSourceTypes.length > 0 &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_explore_components_controls_SelectControl__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation source type'),\n        hovered: true,\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Choose the source of your annotations'),\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Annotation source'),\n        name: \"annotation-source-type\",\n        options: supportedSourceTypes,\n        notFoundContent: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(NotFoundContent, null),\n        value: sourceType,\n        onChange: this.handleAnnotationSourceType,\n        validationErrors: !sourceType ? [(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Mandatory')] : [] }\n      ),\n\n      this.renderValueConfiguration()\n      )\n      ),\n      this.renderSliceConfiguration(),\n      this.renderDisplayConfiguration()\n      ),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { style: { display: 'flex', justifyContent: 'space-between' } },\n      isNew ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { buttonSize: \"small\", onClick: () => this.props.close() },\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Cancel')\n      ) :\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { buttonSize: \"small\", onClick: this.deleteAnnotation },\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Remove')\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        buttonSize: \"small\",\n        disabled: !isValid,\n        onClick: this.applyAnnotation },\n\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Apply')\n      ),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        buttonSize: \"small\",\n        buttonStyle: \"primary\",\n        disabled: !isValid,\n        onClick: this.submitAnnotation },\n\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('OK')\n      )\n      )\n      )\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nAnnotationLayer.propTypes = propTypes;\nAnnotationLayer.defaultProps = defaultProps;const _default =\n\n(0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_22__.b)(AnnotationLayer);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AUTOMATIC_COLOR, \"AUTOMATIC_COLOR\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(NotFoundContentWrapper, \"NotFoundContentWrapper\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(NotFoundContent, \"NotFoundContent\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(AnnotationLayer, \"AnnotationLayer\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/explore/components/controls/AnnotationLayerControl/AnnotationLayer.jsx\n");

/***/ }),

/***/ "./src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js":
/*!***********************************************************************************!*\
  !*** ./src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js ***!
  \***********************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ANNOTATION_SOURCE_TYPES: () => (/* binding */ ANNOTATION_SOURCE_TYPES),\n/* harmony export */   ANNOTATION_SOURCE_TYPES_METADATA: () => (/* binding */ ANNOTATION_SOURCE_TYPES_METADATA),\n/* harmony export */   ANNOTATION_TYPES: () => (/* binding */ ANNOTATION_TYPES),\n/* harmony export */   ANNOTATION_TYPES_METADATA: () => (/* binding */ ANNOTATION_TYPES_METADATA),\n/* harmony export */   DEFAULT_ANNOTATION_TYPE: () => (/* binding */ DEFAULT_ANNOTATION_TYPE),\n/* harmony export */   requiresQuery: () => (/* binding */ requiresQuery)\n/* harmony export */ });\n/* unused harmony export applyNativeColumns */\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction extractTypes(metadata) {\n  return Object.keys(metadata).reduce((prev, key) => {\n    const result = prev;\n    result[key] = key;\n    return result;\n  }, {});\n}\n\nconst ANNOTATION_TYPES_METADATA = {\n  FORMULA: {\n    value: 'FORMULA',\n    label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.t)('Formula')\n  },\n  EVENT: {\n    value: 'EVENT',\n    label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.t)('Event'),\n    supportNativeSource: true\n  },\n  INTERVAL: {\n    value: 'INTERVAL',\n    label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.t)('Interval'),\n    supportNativeSource: true\n  },\n  TIME_SERIES: {\n    value: 'TIME_SERIES',\n    label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_0__.t)('Time series')\n  }\n};\n\nconst ANNOTATION_TYPES = extractTypes(ANNOTATION_TYPES_METADATA);\n\nconst DEFAULT_ANNOTATION_TYPE = ANNOTATION_TYPES.FORMULA;\n\nconst ANNOTATION_SOURCE_TYPES_METADATA = {\n  NATIVE: {\n    value: 'NATIVE',\n    label: 'Superset annotation'\n  }\n};\n\nconst ANNOTATION_SOURCE_TYPES = extractTypes(\n  ANNOTATION_SOURCE_TYPES_METADATA\n);\n\nfunction requiresQuery(annotationSourceType) {\n  return !!annotationSourceType;\n}\n\nconst NATIVE_COLUMN_NAMES = {\n  timeColumn: 'start_dttm',\n  intervalEndColumn: 'end_dttm',\n  titleColumn: 'short_descr',\n  descriptionColumns: ['long_descr']\n};\n\nfunction applyNativeColumns(annotation) {\n  if (annotation.sourceType === ANNOTATION_SOURCE_TYPES.NATIVE) {\n    return { ...annotation, ...NATIVE_COLUMN_NAMES };\n  }\n  return annotation;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractTypes, \"extractTypes\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(ANNOTATION_TYPES_METADATA, \"ANNOTATION_TYPES_METADATA\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(ANNOTATION_TYPES, \"ANNOTATION_TYPES\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(DEFAULT_ANNOTATION_TYPE, \"DEFAULT_ANNOTATION_TYPE\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(ANNOTATION_SOURCE_TYPES_METADATA, \"ANNOTATION_SOURCE_TYPES_METADATA\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(ANNOTATION_SOURCE_TYPES, \"ANNOTATION_SOURCE_TYPES\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(requiresQuery, \"requiresQuery\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(NATIVE_COLUMN_NAMES, \"NATIVE_COLUMN_NAMES\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");reactHotLoader.register(applyNativeColumns, \"applyNativeColumns\", \"/app/superset-frontend/src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0Fubm90YXRpb25MYXllckNvbnRyb2wvQW5ub3RhdGlvblR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0Fubm90YXRpb25MYXllckNvbnRyb2wvQW5ub3RhdGlvblR5cGVzLmpzP2IzOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgdCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcblxuZnVuY3Rpb24gZXh0cmFjdFR5cGVzKG1ldGFkYXRhKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhtZXRhZGF0YSkucmVkdWNlKChwcmV2LCBrZXkpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBwcmV2O1xuICAgIHJlc3VsdFtrZXldID0ga2V5O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIHt9KTtcbn1cblxuZXhwb3J0IGNvbnN0IEFOTk9UQVRJT05fVFlQRVNfTUVUQURBVEEgPSB7XG4gIEZPUk1VTEE6IHtcbiAgICB2YWx1ZTogJ0ZPUk1VTEEnLFxuICAgIGxhYmVsOiB0KCdGb3JtdWxhJyksXG4gIH0sXG4gIEVWRU5UOiB7XG4gICAgdmFsdWU6ICdFVkVOVCcsXG4gICAgbGFiZWw6IHQoJ0V2ZW50JyksXG4gICAgc3VwcG9ydE5hdGl2ZVNvdXJjZTogdHJ1ZSxcbiAgfSxcbiAgSU5URVJWQUw6IHtcbiAgICB2YWx1ZTogJ0lOVEVSVkFMJyxcbiAgICBsYWJlbDogdCgnSW50ZXJ2YWwnKSxcbiAgICBzdXBwb3J0TmF0aXZlU291cmNlOiB0cnVlLFxuICB9LFxuICBUSU1FX1NFUklFUzoge1xuICAgIHZhbHVlOiAnVElNRV9TRVJJRVMnLFxuICAgIGxhYmVsOiB0KCdUaW1lIHNlcmllcycpLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IEFOTk9UQVRJT05fVFlQRVMgPSBleHRyYWN0VHlwZXMoQU5OT1RBVElPTl9UWVBFU19NRVRBREFUQSk7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0FOTk9UQVRJT05fVFlQRSA9IEFOTk9UQVRJT05fVFlQRVMuRk9STVVMQTtcblxuZXhwb3J0IGNvbnN0IEFOTk9UQVRJT05fU09VUkNFX1RZUEVTX01FVEFEQVRBID0ge1xuICBOQVRJVkU6IHtcbiAgICB2YWx1ZTogJ05BVElWRScsXG4gICAgbGFiZWw6ICdTdXBlcnNldCBhbm5vdGF0aW9uJyxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBBTk5PVEFUSU9OX1NPVVJDRV9UWVBFUyA9IGV4dHJhY3RUeXBlcyhcbiAgQU5OT1RBVElPTl9TT1VSQ0VfVFlQRVNfTUVUQURBVEEsXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVxdWlyZXNRdWVyeShhbm5vdGF0aW9uU291cmNlVHlwZSkge1xuICByZXR1cm4gISFhbm5vdGF0aW9uU291cmNlVHlwZTtcbn1cblxuY29uc3QgTkFUSVZFX0NPTFVNTl9OQU1FUyA9IHtcbiAgdGltZUNvbHVtbjogJ3N0YXJ0X2R0dG0nLFxuICBpbnRlcnZhbEVuZENvbHVtbjogJ2VuZF9kdHRtJyxcbiAgdGl0bGVDb2x1bW46ICdzaG9ydF9kZXNjcicsXG4gIGRlc2NyaXB0aW9uQ29sdW1uczogWydsb25nX2Rlc2NyJ10sXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlOYXRpdmVDb2x1bW5zKGFubm90YXRpb24pIHtcbiAgaWYgKGFubm90YXRpb24uc291cmNlVHlwZSA9PT0gQU5OT1RBVElPTl9TT1VSQ0VfVFlQRVMuTkFUSVZFKSB7XG4gICAgcmV0dXJuIHsgLi4uYW5ub3RhdGlvbiwgLi4uTkFUSVZFX0NPTFVNTl9OQU1FUyB9O1xuICB9XG4gIHJldHVybiBhbm5vdGF0aW9uO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/explore/components/controls/AnnotationLayerControl/AnnotationTypes.js\n");

/***/ })

}]);